{"ast":null,"code":"var _jsxFileName = \"/Users/tolulopeadetula/Documents/GitHub/hackernews/src/pages/story/Story.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'hooks/useSelector';\nimport { fetchItemWithComments, clearItemWithComments, itemSelector, commentsSelector } from 'store/slices/item';\nimport MainLayout from 'layouts/main/MainLayout';\nimport StorySingleCard from 'components/common/card/story/single/StorySingleCard';\nimport CommentListCard from 'components/common/card/comment/list/CommentListCard';\nimport { Container } from 'components/styled/container';\nimport { FullContent } from 'components/styled/content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Story = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const params = useParams();\n  const story = useSelector(itemSelector);\n  const comments = useSelector(commentsSelector);\n  useEffect(() => {\n    dispatch(fetchItemWithComments(Number(params.id)));\n    return () => {\n      dispatch(clearItemWithComments());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FullContent, {\n        children: story && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(StorySingleCard, {\n            story: story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommentListCard, {\n            comments: comments,\n            storyId: story.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Story, \"1hzjCvBPbpEm1IIiBDXxJN9PidE=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = Story;\nexport default Story;\n\nvar _c;\n\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"sources":["/Users/tolulopeadetula/Documents/GitHub/hackernews/src/pages/story/Story.tsx"],"names":["React","useEffect","useParams","useDispatch","useSelector","fetchItemWithComments","clearItemWithComments","itemSelector","commentsSelector","MainLayout","StorySingleCard","CommentListCard","Container","FullContent","Story","dispatch","params","story","comments","Number","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,YAHF,EAIEC,gBAJF,QAKO,mBALP;AAUA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,eAAP,MAA4B,qDAA5B;AACA,OAAOC,eAAP,MAA4B,qDAA5B;AAEA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,MAAM,GAAGd,SAAS,EAAxB;AAEA,QAAMe,KAAK,GAAGb,WAAW,CAACG,YAAD,CAAzB;AACA,QAAMW,QAAQ,GAAGd,WAAW,CAACI,gBAAD,CAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACV,qBAAqB,CAACc,MAAM,CAACH,MAAM,CAACI,EAAR,CAAP,CAAtB,CAAR;AAEA,WAAO,MAAM;AACXL,MAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,WAAD;AAAA,kBACGW,KAAK,iBACJ;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,eAAD;AACE,YAAA,QAAQ,EAAEC,QADZ;AAEE,YAAA,OAAO,EAAGD,KAAD,CAAyBG;AAFpC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhCD;;GAAMN,K;UACaX,W,EACFD,S,EAEDE,W,EACGA,W;;;KALbU,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { useSelector } from 'hooks/useSelector';\n\nimport {\n  fetchItemWithComments,\n  clearItemWithComments,\n  itemSelector,\n  commentsSelector,\n} from 'store/slices/item';\n\nimport { ItemInterface } from 'types/item';\nimport { CommentsTree } from 'types/comment';\n\nimport MainLayout from 'layouts/main/MainLayout';\nimport StorySingleCard from 'components/common/card/story/single/StorySingleCard';\nimport CommentListCard from 'components/common/card/comment/list/CommentListCard';\n\nimport { Container } from 'components/styled/container';\nimport { FullContent } from 'components/styled/content';\n\nconst Story = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const story = useSelector(itemSelector);\n  const comments = useSelector(commentsSelector);\n\n  useEffect(() => {\n    dispatch(fetchItemWithComments(Number(params.id)));\n\n    return () => {\n      dispatch(clearItemWithComments());\n    };\n  }, []);\n\n  return (\n    <MainLayout>\n      <Container>\n        <FullContent>\n          {story && (\n            <>\n              <StorySingleCard story={story as ItemInterface} />\n              <CommentListCard\n                comments={comments as CommentsTree}\n                storyId={(story as ItemInterface).id}\n              />\n            </>\n          )}\n        </FullContent>\n      </Container>\n    </MainLayout>\n  );\n};\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}