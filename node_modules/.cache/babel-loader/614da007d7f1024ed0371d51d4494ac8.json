{"ast":null,"code":"var _jsxFileName = \"/Users/tolulopeadetula/Documents/GitHub/hackernews/src/components/common/pagination/Pagination.tsx\";\nimport React from 'react';\nimport { Wrapper, CurrentPage, Arrow } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    currentPage,\n    pagesCount,\n    setPage\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Arrow, {\n      disabled: currentPage === 1,\n      onClick: () => currentPage !== 1 && setPage(currentPage - 1),\n      children: '<--'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CurrentPage, {\n      children: [currentPage, \"/\", Number.isNaN(pagesCount) ? 1 : Math.max(pagesCount, 1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      disabled: pagesCount <= currentPage,\n      onClick: () => pagesCount > currentPage && setPage(currentPage + 1),\n      children: '-->'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/tolulopeadetula/Documents/GitHub/hackernews/src/components/common/pagination/Pagination.tsx"],"names":["React","Wrapper","CurrentPage","Arrow","Pagination","currentPage","pagesCount","setPage","Number","isNaN","Math","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,KAA/B,QAA4C,UAA5C;;;AAQA,MAAMC,UAA2B,GAAG;AAAA,MAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,GAAD;AAAA,sBAClC,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEF,WAAW,KAAK,CAD5B;AAEE,MAAA,OAAO,EAAE,MAAMA,WAAW,KAAK,CAAhB,IAAqBE,OAAO,CAACF,WAAW,GAAG,CAAf,CAF7C;AAAA,gBAIG;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,WAAD;AAAA,iBACGA,WADH,OACiBG,MAAM,CAACC,KAAP,CAAaH,UAAb,IAA2B,CAA3B,GAA+BI,IAAI,CAACC,GAAL,CAASL,UAAT,EAAqB,CAArB,CADhD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEA,UAAU,IAAID,WAD1B;AAEE,MAAA,OAAO,EAAE,MAAMC,UAAU,GAAGD,WAAb,IAA4BE,OAAO,CAACF,WAAW,GAAG,CAAf,CAFpD;AAAA,gBAIG;AAJH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAAA,CAApC;;KAAMD,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\nimport { Wrapper, CurrentPage, Arrow } from './styles';\n\ntype Props = {\n  currentPage: number;\n  pagesCount: number;\n  setPage: (page: number) => void;\n};\n\nconst Pagination: React.FC<Props> = ({ currentPage, pagesCount, setPage }) => (\n  <Wrapper>\n    <Arrow\n      disabled={currentPage === 1}\n      onClick={() => currentPage !== 1 && setPage(currentPage - 1)}\n    >\n      {'<--'}\n    </Arrow>\n    <CurrentPage>\n      {currentPage}/{Number.isNaN(pagesCount) ? 1 : Math.max(pagesCount, 1)}\n    </CurrentPage>\n    <Arrow\n      disabled={pagesCount <= currentPage}\n      onClick={() => pagesCount > currentPage && setPage(currentPage + 1)}\n    >\n      {'-->'}\n    </Arrow>\n  </Wrapper>\n);\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}