{"ast":null,"code":"var _jsxFileName = \"/Users/tolulopeadetula/Documents/GitHub/hackernews/src/pages/stories/Stories.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'hooks/useSelector';\nimport { clearStoriesList, fetchStoriesList, fetchListItems, storiesSelector, storiesTotalCountSelector } from 'store/slices/stories';\nimport { STORIES_PER_PAGE } from 'config/pagination';\nimport MainLayout from 'layouts/main/MainLayout';\nimport StoryListCard from 'components/common/card/story/list/StoryListCard';\nimport Pagination from 'components/common/pagination/Pagination';\nimport { Container } from 'components/styled/container';\nimport { FullContent } from 'components/styled/content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stories = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const params = useParams();\n  const type = params.type;\n  const [page, setPage] = useState(1);\n  const itemsList = useSelector(storiesSelector);\n  const totalCount = useSelector(state => storiesTotalCountSelector(type)(state));\n  useEffect(() => {\n    async function fetchListAndItems() {\n      setPage(1);\n      await dispatch(fetchStoriesList(type));\n      await dispatch(fetchListItems({\n        type,\n        page: 1\n      }));\n    }\n\n    fetchListAndItems();\n    return () => {\n      dispatch(clearStoriesList());\n    };\n  }, [params.type]);\n  useEffect(() => {\n    if ((itemsList === null || itemsList === void 0 ? void 0 : itemsList.length) !== 0) {\n      dispatch(fetchListItems({\n        type,\n        page\n      }));\n    }\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FullContent, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination, {\n          pagesCount: Math.floor(totalCount / STORIES_PER_PAGE),\n          currentPage: page,\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StoryListCard, {\n          stories: itemsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stories, \"3mXLC7d2N5CaDiBZVN2ADPwsOyE=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = Stories;\nexport default Stories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"sources":["/Users/tolulopeadetula/Documents/GitHub/hackernews/src/pages/stories/Stories.tsx"],"names":["React","useState","useEffect","useParams","useDispatch","useSelector","clearStoriesList","fetchStoriesList","fetchListItems","storiesSelector","storiesTotalCountSelector","STORIES_PER_PAGE","MainLayout","StoryListCard","Pagination","Container","FullContent","Stories","dispatch","params","type","page","setPage","itemsList","totalCount","state","fetchListAndItems","length","Math","floor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,yBALF,QAMO,sBANP;AAQA,SAASC,gBAAT,QAAiC,mBAAjC;AAIA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,iDAA1B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AAEA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,IAAI,GAAGD,MAAM,CAACC,IAApB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAS,CAAT,CAAhC;AAEA,QAAMsB,SAAS,GAAGlB,WAAW,CAACI,eAAD,CAA7B;AACA,QAAMe,UAAU,GAAGnB,WAAW,CAAEoB,KAAD,IAC7Bf,yBAAyB,CAACU,IAAD,CAAzB,CAAgCK,KAAhC,CAD4B,CAA9B;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewB,iBAAf,GAAmC;AACjCJ,MAAAA,OAAO,CAAC,CAAD,CAAP;AACA,YAAMJ,QAAQ,CAACX,gBAAgB,CAACa,IAAD,CAAjB,CAAd;AACA,YAAMF,QAAQ,CACZV,cAAc,CAAC;AACbY,QAAAA,IADa;AAEbC,QAAAA,IAAI,EAAE;AAFO,OAAD,CADF,CAAd;AAMD;;AACDK,IAAAA,iBAAiB;AAEjB,WAAO,MAAM;AACXR,MAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACa,MAAM,CAACC,IAAR,CAhBM,CAAT;AAkBAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAAqB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEI,MAAX,MAAsB,CAA1B,EAA6B;AAC3BT,MAAAA,QAAQ,CACNV,cAAc,CAAC;AACbY,QAAAA,IADa;AAEbC,QAAAA;AAFa,OAAD,CADR,CAAR;AAMD;AACF,GATQ,EASN,CAACA,IAAD,CATM,CAAT;AAWA,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,UAAU,EAAEO,IAAI,CAACC,KAAL,CAAWL,UAAU,GAAGb,gBAAxB,CADd;AAEE,UAAA,WAAW,EAAEU,IAFf;AAGE,UAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvDD;;GAAMN,O;UACab,W,EACFD,S,EAKGE,W,EACCA,W;;;KARfY,O;AAyDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { useSelector } from 'hooks/useSelector';\n\nimport {\n  clearStoriesList,\n  fetchStoriesList,\n  fetchListItems,\n  storiesSelector,\n  storiesTotalCountSelector,\n} from 'store/slices/stories';\n\nimport { STORIES_PER_PAGE } from 'config/pagination';\n\nimport { StoryListsTypes } from 'types/story';\n\nimport MainLayout from 'layouts/main/MainLayout';\nimport StoryListCard from 'components/common/card/story/list/StoryListCard';\nimport Pagination from 'components/common/pagination/Pagination';\n\nimport { Container } from 'components/styled/container';\nimport { FullContent } from 'components/styled/content';\n\nconst Stories = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const type = params.type as StoryListsTypes;\n\n  const [page, setPage] = useState<number>(1);\n\n  const itemsList = useSelector(storiesSelector);\n  const totalCount = useSelector((state) =>\n    storiesTotalCountSelector(type)(state)\n  );\n\n  useEffect(() => {\n    async function fetchListAndItems() {\n      setPage(1);\n      await dispatch(fetchStoriesList(type));\n      await dispatch(\n        fetchListItems({\n          type,\n          page: 1,\n        })\n      );\n    }\n    fetchListAndItems();\n\n    return () => {\n      dispatch(clearStoriesList());\n    };\n  }, [params.type]);\n\n  useEffect(() => {\n    if (itemsList?.length !== 0) {\n      dispatch(\n        fetchListItems({\n          type,\n          page,\n        })\n      );\n    }\n  }, [page]);\n\n  return (\n    <MainLayout>\n      <Container>\n        <FullContent>\n          <Pagination\n            pagesCount={Math.floor(totalCount / STORIES_PER_PAGE)}\n            currentPage={page}\n            setPage={setPage}\n          />\n          <StoryListCard stories={itemsList} />\n        </FullContent>\n      </Container>\n    </MainLayout>\n  );\n};\n\nexport default Stories;\n"]},"metadata":{},"sourceType":"module"}